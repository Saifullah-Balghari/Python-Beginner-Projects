{
  "questions": [
    {
      "question": "what is your name?",
      "answer": "My name is ApoGPT 2.0"
    },
    {
      "question": "abc",
      "answer": "it is english Alphabets."
    },
    {
      "question": "What is cpp?",
      "answer": "it is a programming language."
    },
    {
      "question": "What is the difference between interpreted and compiled programming languages?",
      "answer": "Interpreted languages are executed line by line, while compiled languages are translated into machine code before execution."
    },
    {
      "question": "What is a variable in programming?",
      "answer": "A variable is a named storage location in computer memory that holds a value which can change during the program execution."
    },
    {
      "question": "What is a loop in programming?",
      "answer": "A loop is a control flow statement that allows the same code to be executed repeatedly based on a condition."
    },
    {
      "question": "What is the difference between `==` and `===` in JavaScript?",
      "answer": "`==` compares for equality after type conversion, while `===` compares for equality without type conversion (strict equality)."
    },
    {
      "question": "What is object-oriented programming (OOP)?",
      "answer": "Object-oriented programming is a programming paradigm based on the concept of 'objects', which can contain data, in the form of fields, and code, in the form of procedures."
    },
    {
      "question": "What is inheritance in OOP?",
      "answer": "Inheritance is the mechanism by which a class can inherit properties and behavior from another class."
    },
    {
      "question": "What is polymorphism in OOP?",
      "answer": "Polymorphism is the ability of a single function or method to operate on data of different types."
    },
    {
      "question": "What is encapsulation in OOP?",
      "answer": "Encapsulation is the bundling of data and methods that operate on that data into a single unit (class)."
    },
    {
      "question": "What is a data structure?",
      "answer": "A data structure is a way of organizing and storing data in a computer so that it can be accessed and modified efficiently."
    },
    {
      "question": "What is a linked list?",
      "answer": "A linked list is a data structure consisting of a sequence of elements where each element points to the next element in the sequence."
    },
    {
      "question": "What is a hash table?",
      "answer": "A hash table is a data structure that stores key-value pairs, where the keys are hashed to generate indices for quick data retrieval."
    },
    {
      "question": "Explain the concept of abstraction in programming.",
      "answer": "Abstraction is the process of hiding the implementation details of a system and exposing only the necessary functionalities to the user."
    },
    {
      "question": "What is a binary search algorithm?",
      "answer": "A binary search algorithm is a search algorithm that finds the position of a target value within a sorted array by repeatedly dividing the search interval in half."
    },
    {
      "question": "What is a compiler?",
      "answer": "A compiler is a software tool that translates high-level programming languages into machine code or intermediate code, which can be executed by a computer."
    },
    {
      "question": "What is a pointer?",
      "answer": "A pointer is a variable that stores the memory address of another variable. It allows direct manipulation of memory locations."
    },
    {
      "question": "What is dynamic programming?",
      "answer": "Dynamic programming is a method for solving complex problems by breaking them down into simpler sub-problems and solving each subproblem only once, storing the solutions to avoid redundant calculations."
    },
    {
      "question": "What is a deadlock?",
      "answer": "A deadlock is a situation in which two or more processes are unable to proceed because each is waiting for the other to release a resource."
    },
    {
      "question": "What is the difference between synchronous and asynchronous programming?",
      "answer": "In synchronous programming, tasks are executed one after another in a sequential manner, while in asynchronous programming, tasks can be executed concurrently, allowing non-blocking operations."
    },
    {
      "question": "What is the OSI model?",
      "answer": "The OSI (Open Systems Interconnection) model is a conceptual framework that standardizes the functions of a telecommunication or computing system into seven abstraction layers."
    },
    {
      "question": "Explain the concept of virtual memory.",
      "answer": "Virtual memory is a memory management technique that uses a combination of hardware and software to allow a computer to compensate for physical memory shortages by temporarily transferring data from RAM to disk storage."
    },
    {
      "question": "What is the difference between a stack and a queue?",
      "answer": "A stack is a Last In, First Out (LIFO) data structure, while a queue is a First In, First Out (FIFO) data structure."
    },
    {
      "question": "What is a binary search tree?",
      "answer": "A binary search tree is a binary tree data structure in which each node has at most two children, and the value of each node is greater than the values of its left subtree and less than the values of its right subtree."
    },
    {
      "question": "What is a database index?",
      "answer": "A database index is a data structure that improves the speed of data retrieval operations on a database table by providing quick access to the rows based on the values of certain columns."
    },
    {
      "question": "What is a heap?",
      "answer": "A heap is a specialized tree-based data structure that satisfies the heap property: for every node 'i' other than the root, the value of the parent node is greater (for a max heap) or lesser (for a min heap) than the value of its children."
    },
    {
      "question": "What is a graph data structure?",
      "answer": "A graph is a non-linear data structure consisting of a finite set of vertices (nodes) connected by edges. Graphs are used to model relationships between objects."
    },
    {
      "question": "What is a Docker container?",
      "answer": "A Docker container is a lightweight, standalone, executable package that includes everything needed to run a piece of software, including the code, runtime, system tools, libraries, and settings."
    },
    {
      "question": "What is an API?",
      "answer": "An API (Application Programming Interface) is a set of rules and protocols that allows different software applications to communicate with each other."
    },
    {
      "question": "What is a callback function?",
      "answer": "A callback function is a function that is passed as an argument to another function and is executed after the completion of a specific task or event."
    },
    {
      "question": "What is a cache?",
      "answer": "A cache is a hardware or software component that stores data temporarily to reduce data access times, latency, and improve performance."
    },
    {
      "question": "What is the difference between TCP and UDP?",
      "answer": "TCP (Transmission Control Protocol) provides reliable, ordered, and error-checked delivery of data, while UDP (User Datagram Protocol) provides faster transmission with no guarantee of delivery, ordering, or error checking."
    },
    {
      "question": "What is an algorithm?",
      "answer": "An algorithm is a step-by-step procedure or formula for solving a problem, often expressed as a finite sequence of well-defined instructions."
    },
    {
      "question": "What is a shell?",
      "answer": "A shell is a command-line interpreter that provides a user interface for access to an operating system's services. It allows users to execute commands by typing them directly at a terminal or by writing scripts."
    },
    {
      "question": "What is a deadlock?",
      "answer": "A deadlock is a situation in which two or more processes are unable to proceed because each is waiting for the other to release a resource."
    },
    {
      "question": "What is a semaphore?",
      "answer": "A semaphore is a synchronization construct used to control access to a common resource by multiple processes or threads in a concurrent system."
    },
    {
      "question": "What is a race condition?",
      "answer": "A race condition is a situation in which the behavior of a program depends on the relative timing or interleaving of multiple concurrent operations, leading to unpredictable results."
    },
    {
      "question": "What is functional programming?",
      "answer": "Functional programming is a programming paradigm that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data."
    },
    {
      "question": "What is a lambda function?",
      "answer": "A lambda function (or anonymous function) is a small anonymous function that can be defined inline, typically used for short, simple operations."
    },
    {
      "question": "What is memoization?",
      "answer": "Memoization is an optimization technique used to speed up computations by storing the results of expensive function calls and returning the cached result when the same inputs occur again."
    },
    {
      "question": "What is a deadlock?",
      "answer": "A deadlock is a situation in which two or more processes are unable to proceed because each is waiting for the other to release a resource."
    },
    {
      "question": "What is a semaphore?",
      "answer": "A semaphore is a synchronization construct used to control access to a common resource by multiple processes or threads in a concurrent system."
    },
    {
      "question": "What is a variable?",
      "answer": "A variable is a named storage location in a program's memory that holds a value."
    },
    {
      "question": "What is a function?",
      "answer": "A function is a block of organized, reusable code that performs a specific task."
    },
    {
      "question": "What is a loop?",
      "answer": "A loop is a programming construct that repeats a block of code as long as a specified condition is true."
    },
    {
      "question": "What is an array?",
      "answer": "An array is a data structure that stores a collection of elements, each identified by an index."
    },
    {
      "question": "What is a string?",
      "answer": "A string is a sequence of characters, typically used to represent text."
    },
    {
      "question": "What is a conditional statement?",
      "answer": "A conditional statement is a programming construct that performs different actions depending on whether a specified condition evaluates to true or false."
    },
    {
      "question": "What is debugging?",
      "answer": "Debugging is the process of identifying and fixing errors or bugs in a program."
    },
    {
      "question": "What is a compiler?",
      "answer": "A compiler is a software tool that translates source code written in a high-level programming language into machine code that can be executed by a computer."
    },
    {
      "question": "What is an algorithm?",
      "answer": "An algorithm is a step-by-step procedure for solving a problem or accomplishing a task."
    },
    {
      "question": "What is a comment?",
      "answer": "A comment is a piece of text within a program that is ignored by the compiler or interpreter and is used to provide explanations or notes to the reader."
    },
    {
      "question": "What is an integer?",
      "answer": "An integer is a whole number, either positive, negative, or zero, without any decimal or fractional part."
    },
    {
      "question": "What is a float?",
      "answer": "A float is a data type used to represent numbers with a decimal point."
    },
    {
      "question": "What is a boolean?",
      "answer": "A boolean is a data type that represents either true or false."
    },
    {
      "question": "What is concatenation?",
      "answer": "Concatenation is the process of combining two or more strings into a single string."
    },
    {
      "question": "What is an if statement?",
      "answer": "An if statement is a conditional statement that executes a block of code if a specified condition is true."
    },
    {
      "question": "What is a for loop?",
      "answer": "A for loop is a control flow statement that repeatedly executes a block of code a fixed number of times."
    },
    {
      "question": "What is a while loop?",
      "answer": "A while loop is a control flow statement that repeatedly executes a block of code as long as a specified condition is true."
    },
    {
      "question": "What is a function parameter?",
      "answer": "A function parameter is a variable in a function's definition that represents a value that the function expects to receive when it is called."
    },
    {
      "question": "What is a return statement?",
      "answer": "A return statement is a statement that terminates the execution of a function and specifies the value to be returned to the caller."
    },
    {
      "question": "What is a syntax error?",
      "answer": "A syntax error is an error in the syntax of a program that prevents it from being parsed or executed by the compiler or interpreter."
    },
    {
      "question": "What is a runtime error?",
      "answer": "A runtime error is an error that occurs while a program is running, typically due to invalid input or unexpected conditions."
    },
    {
      "question": "What is a logic error?",
      "answer": "A logic error is an error in a program's logic that causes it to produce incorrect results, even though it may compile and run without errors."
    },
    {
      "question": "What is an IDE?",
      "answer": "An IDE (Integrated Development Environment) is a software application that provides comprehensive facilities to computer programmers for software development."
    },
    {
      "question": "What is a variable declaration?",
      "answer": "A variable declaration is a statement that reserves memory space for a variable and optionally initializes its value."
    },
    {
      "question": "What is a constant?",
      "answer": "A constant is a value that cannot be altered or modified during program execution."
    },
    {
      "question": "What is typecasting?",
      "answer": "Typecasting is the process of converting a variable from one data type to another."
    },
    {
      "question": "What is the main function?",
      "answer": "The main function is a special function in many programming languages that serves as the entry point for execution of the program."
    },
    {
      "question": "What is the difference between a function declaration and a function definition?",
      "answer": "A function declaration tells the compiler about a function's name, return type, and parameters, while a function definition provides the actual implementation of the function."
    },
    {
      "question": "What is the difference between a compiler and an interpreter?",
      "answer": "A compiler translates the entire source code into machine code before execution, while an interpreter translates and executes the source code line by line."
    },
    {
      "question": "What is a library?",
      "answer": "A library is a collection of precompiled routines, functions, and classes that a program can use to perform specific tasks."
    },
    {
      "question": "What is a comment?",
      "answer": "A comment is a piece of text within a program that is ignored by the compiler or interpreter and is used to provide explanations or notes to the reader."
    },
    {
      "question": "What is a data type?",
      "answer": "A data type is a classification that specifies which type of value a variable can hold."
    },
    {
      "question": "What is scope?",
      "answer": "Scope is the region of a program in which a variable is defined and can be accessed."
    },
    {
      "question": "What is a pointer?",
      "answer": "A pointer is a variable that stores the memory address of another variable."
    },
    {
      "question": "What is the difference between local and global variables?",
      "answer": "Local variables are declared inside a function and can only be accessed within that function, while global variables are declared outside of any function and can be accessed throughout the entire program."
    },
    {
      "question": "What is a method?",
      "answer": "A method is a function that is associated with an object and can access and modify the object's data."
    },
    {
      "question": "What is an object?",
      "answer": "An object is a self-contained entity that consists of both data and methods to manipulate that data."
    },
    {
      "question": "What is inheritance?",
      "answer": "Inheritance is a mechanism in object-oriented programming that allows a class to inherit properties and behaviors from another class."
    },
    {
      "question": "What is polymorphism?",
      "answer": "Polymorphism is the ability of different objects to respond to the same message or method call in different ways."
    },
    {
      "question": "What is abstraction?",
      "answer": "Abstraction is the process of simplifying complex systems by modeling only the relevant aspects and ignoring unnecessary details."
    },
    {
      "question": "What is a loop?",
      "answer": "A loop is a programming construct that repeats a block of code until a specified condition is met."
    },
    {
      "question": "What is a conditional statement?",
      "answer": "A conditional statement is a programming construct that executes different actions based on whether a specified condition evaluates to true or false."
    },
    {
      "question": "What is an array?",
      "answer": "An array is a data structure that stores a collection of elements, each identified by an index."
    },
    {
      "question": "What is a string?",
      "answer": "A string is a sequence of characters, typically used to represent text."
    },
    {
      "question": "What is a function?",
      "answer": "A function is a block of organized, reusable code that performs a specific task."
    },
    {
      "question": "What is debugging?",
      "answer": "Debugging is the process of identifying and fixing errors or bugs in a program."
    },
    {
      "question": "What is a variable?",
      "answer": "A variable is a named storage location in a program's memory that holds a value."
    },
    {
      "question": "What is a compiler?",
      "answer": "A compiler is a software tool that translates source code written in a high-level programming language into machine code that can be executed by a computer."
    },
    {
      "question": "What is an algorithm?",
      "answer": "An algorithm is a step-by-step procedure or formula for solving a problem, often expressed as a finite sequence of well-defined instructions."
    },
    {
      "question": "What is an integer?",
      "answer": "An integer is a whole number, either positive, negative, or zero, without any decimal or fractional part."
    },
    {
      "question": "What is a boolean?",
      "answer": "A boolean is a data type that represents either true or false."
    },
    {
      "question": "What is a float?",
      "answer": "A float is a data type used to represent numbers with a decimal point."
    },
    {
      "question": "What is concatenation?",
      "answer": "Concatenation is the process of combining two or more strings into a single string."
    },
    {
      "question": "What is an if statement?",
      "answer": "An if statement is a conditional statement that executes a block of code if a specified condition is true."
    },
    {
      "question": "What is a for loop?",
      "answer": "A for loop is a control flow statement that repeatedly executes a block of code a fixed number of times."
    },
    {
      "question": "What is a while loop?",
      "answer": "A while loop is a control flow statement that repeatedly executes a block of code as long as a specified condition is true."
    },
    {
      "question": "What is a function parameter?",
      "answer": "A function parameter is a variable in a function's definition that represents a value that the function expects to receive when it is called."
    },
    {
      "question": "What is a return statement?",
      "answer": "A return statement is a statement that terminates the execution of a function and specifies the value to be returned to the caller."
    },
    {
      "question": "What is a syntax error?",
      "answer": "A syntax error is an error in the syntax of a program that prevents it from being parsed or executed by the compiler or interpreter."
    },
    {
      "question": "What is a runtime error?",
      "answer": "A runtime error is an error that occurs while a program is running, typically due to invalid input or unexpected conditions."
    },
    {
      "question": "What is a logic error?",
      "answer": "A logic error is an error in a program's logic that causes it to produce incorrect results, even though it may compile and run without errors."
    },
    {
      "question": "What is an IDE?",
      "answer": "An IDE (Integrated Development Environment) is a software application that provides comprehensive facilities to computer programmers for software development."
    },
    {
      "question": "What is a variable declaration?",
      "answer": "A variable declaration is a statement that reserves memory space for a variable and optionally initializes its value."
    },
    {
      "question": "What is a constant?",
      "answer": "A constant is a value that cannot be altered or modified during program execution."
    },
    {
      "question": "What is typecasting?",
      "answer": "Typecasting is the process of converting a variable from one data type to another."
    },
    {
      "question": "What is the main function?",
      "answer": "The main function is a special function in many programming languages that serves as the entry point for execution of the program."
    },
    {
      "question": "What is the difference between a function declaration and a function definition?",
      "answer": "A function declaration tells the compiler about a function's name, return type, and parameters, while a function definition provides the actual implementation of the function."
    },
    {
      "question": "What is the difference between a compiler and an interpreter?",
      "answer": "A compiler translates the entire source code into machine code before execution, while an interpreter translates and executes the source code line by line."
    },
    {
      "question": "What is a library?",
      "answer": "A library is a collection of precompiled routines, functions, and classes that a program can use to perform specific tasks."
    },
    {
      "question": "What is a comment?",
      "answer": "A comment is a piece of text within a program that is ignored by the compiler or interpreter and is used to provide explanations or notes to the reader."
    },
    {
      "question": "What is a data type?",
      "answer": "A data type is a classification that specifies which type of value a variable can hold."
    },
    {
      "question": "What is scope?",
      "answer": "Scope is the region of a program in which a variable is defined and can be accessed."
    },
    {
      "question": "What is an operator?",
      "answer": "An operator is a symbol or keyword used to perform operations on operands in a programming language."
    },
    {
      "question": "What is an expression?",
      "answer": "An expression is a combination of variables, operators, and method invocations that evaluates to a single value."
    },
    {
      "question": "What is a syntax?",
      "answer": "Syntax refers to the rules that govern the structure of statements in a programming language."
    },
    {
      "question": "What is a statement?",
      "answer": "A statement is a complete instruction that performs a specific action in a program."
    },
    {
      "question": "What is a library?",
      "answer": "A library is a collection of precompiled routines, functions, and classes that can be used in a program."
    },
    {
      "question": "What is the purpose of a constructor?",
      "answer": "A constructor is a special method used to initialize objects when they are created."
    },
    {
      "question": "What is the difference between a method and a function?",
      "answer": "A method is a function that is associated with an object, while a function is a standalone block of code."
    },
    {
      "question": "What is dynamic memory allocation?",
      "answer": "Dynamic memory allocation refers to the process of allocating memory at runtime."
    },
    {
      "question": "What is the difference between a stack and a heap?",
      "answer": "A stack is used for static memory allocation, while a heap is used for dynamic memory allocation."
    },
    {
      "question": "What is the purpose of version control?",
      "answer": "Version control is used to track and manage changes to source code over time."
    },
    {
      "question": "What is a database?",
      "answer": "A database is an organized collection of data, typically stored and accessed electronically from a computer system."
    },
    {
      "question": "What is a primary key?",
      "answer": "A primary key is a unique identifier for a record in a database table."
    },
    {
      "question": "What is the difference between a compiler and an interpreter?",
      "answer": "A compiler translates source code into machine code before execution, while an interpreter translates source code into machine code line by line during execution."
    },
    {
      "question": "What is a variable scope?",
      "answer": "Variable scope refers to the accessibility and visibility of variables within a program."
    },
    {
      "question": "What is a command-line interface (CLI)?",
      "answer": "A command-line interface is a text-based user interface used to interact with a computer program."
    },
    {
      "question": "What is a graphical user interface (GUI)?",
      "answer": "A graphical user interface is a visual way for users to interact with a computer program using graphical elements such as windows, buttons, and icons."
    },
    {
      "question": "What is a binary file?",
      "answer": "A binary file is a computer file that contains data encoded in binary format, which is readable only by computers."
    },
    {
      "question": "What is an ASCII file?",
      "answer": "An ASCII file is a text file that uses the ASCII (American Standard Code for Information Interchange) character encoding."
    },
    {
      "question": "What is a function prototype?",
      "answer": "A function prototype is a declaration that specifies the function's name, parameters, and return type."
    },
    {
      "question": "What is the purpose of a header file?",
      "answer": "A header file contains declarations for functions, variables, and other objects used in a program."
    },
    {
      "question": "What is the difference between static and dynamic linking?",
      "answer": "Static linking links libraries to an executable at compile time, while dynamic linking links libraries at runtime."
    },
    {
      "question": "What is a data structure?",
      "answer": "A data structure is a way of organizing and storing data in a computer so that it can be accessed and modified efficiently."
    },
    {
      "question": "What is a pointer?",
      "answer": "A pointer is a variable that stores the memory address of another variable."
    },
    {
      "question": "What is a linked list?",
      "answer": "A linked list is a data structure consisting of a sequence of elements, where each element points to the next element in the sequence."
    },
    {
      "question": "What is a queue?",
      "answer": "A queue is a data structure that follows the First In, First Out (FIFO) principle."
    },
    {
      "question": "What is a stack?",
      "answer": "A stack is a data structure that follows the Last In, First Out (LIFO) principle."
    },
    {
      "question": "What is recursion?",
      "answer": "Recursion is a programming technique where a function calls itself to solve a problem."
    },
    {
      "question": "What is an API (Application Programming Interface)?",
      "answer": "An API is a set of rules and protocols that allows different software applications to communicate with each other."
    },
    {
      "question": "What is object-oriented programming (OOP)?",
      "answer": "Object-oriented programming is a programming paradigm based on the concept of objects, which can contain data and code."
    },
    {
      "question": "What is Python?",
      "answer": "Python is a high-level, interpreted programming language known for its simplicity and readability."
    },
    {
      "question": "Who created Python?",
      "answer": "Python was created by Guido van Rossum and first released in 1991."
    },
    {
      "question": "What are the key features of Python?",
      "answer": "Key features of Python include its simplicity, readability, extensive standard library, and support for multiple programming paradigms."
    },
    {
      "question": "What is PEP 8?",
      "answer": "PEP 8 is the Python Enhancement Proposal that provides guidelines for writing Python code to improve its readability and consistency."
    },
    {
      "question": "What are the different data types in Python?",
      "answer": "Python supports various data types including integers, floats, strings, lists, tuples, dictionaries, and more."
    },
    {
      "question": "What is a Python module?",
      "answer": "A Python module is a file containing Python code that can be reused in other Python programs."
    },
    {
      "question": "What is a Python package?",
      "answer": "A Python package is a directory containing one or more Python modules and an __init__.py file to indicate that the directory should be treated as a package."
    },
    {
      "question": "What is the difference between a list and a tuple?",
      "answer": "A list is mutable, meaning its elements can be changed after creation, while a tuple is immutable, meaning its elements cannot be changed after creation."
    },
    {
      "question": "What is a dictionary in Python?",
      "answer": "A dictionary in Python is an unordered collection of key-value pairs."
    },
    {
      "question": "How do you comment in Python?",
      "answer": "You can use the # symbol to insert comments in Python code."
    },
    {
      "question": "What is the purpose of the 'if' statement in Python?",
      "answer": "The 'if' statement in Python is used to execute a block of code if a specified condition is true."
    },
    {
      "question": "What is a loop in Python?",
      "answer": "A loop in Python is used to repeat a block of code multiple times."
    },
    {
      "question": "What is the 'while' loop in Python?",
      "answer": "The 'while' loop in Python is used to repeat a block of code as long as a specified condition is true."
    },
    {
      "question": "What is the 'for' loop in Python?",
      "answer": "The 'for' loop in Python is used to iterate over a sequence (such as a list, tuple, or string) and execute a block of code for each item in the sequence."
    },
    {
      "question": "What is list comprehension in Python?",
      "answer": "List comprehension is a concise way to create lists in Python using a single line of code."
    },
    {
      "question": "What is a function in Python?",
      "answer": "A function in Python is a block of reusable code that performs a specific task."
    },
    {
      "question": "What is a lambda function in Python?",
      "answer": "A lambda function in Python is a small anonymous function defined using the lambda keyword."
    },
    {
      "question": "What is a generator in Python?",
      "answer": "A generator in Python is a special type of iterator that generates values on-the-fly using the yield keyword."
    },
    {
      "question": "What is a decorator in Python?",
      "answer": "A decorator in Python is a design pattern that allows behavior to be added to functions or classes."
    },
    {
      "question": "What is a class in Python?",
      "answer": "A class in Python is a blueprint for creating objects that define their properties and behavior."
    },
    {
      "question": "What is inheritance in Python?",
      "answer": "Inheritance in Python is the process of creating a new class based on an existing class, inheriting its properties and methods."
    },
    {
      "question": "What is method overriding in Python?",
      "answer": "Method overriding in Python is the ability of a subclass to provide a specific implementation of a method that is already defined in its superclass."
    },
    {
      "question": "What is method overloading in Python?",
      "answer": "Method overloading in Python is not directly supported, but you can achieve similar behavior by using default parameter values or variable-length argument lists."
    },
    {
      "question": "What is encapsulation in Python?",
      "answer": "Encapsulation in Python is the bundling of data and methods that operate on that data into a single unit (class)."
    },
    {
      "question": "What is the purpose of the 'try' statement in Python?",
      "answer": "The 'try' statement in Python is used to catch and handle exceptions (errors) that occur during the execution of a block of code."
    },
    {
      "question": "What is the purpose of the 'except' clause in Python?",
      "answer": "The 'except' clause in Python is used to specify the block of code to be executed if an exception (error) occurs within the 'try' block."
    },
    {
      "question": "What is the purpose of the 'finally' clause in Python?",
      "answer": "The 'finally' clause in Python is used to specify the block of code to be executed regardless of whether an exception (error) occurs within the 'try' block."
    },
    {
      "question": "What is a module in Python?",
      "answer": "A module in Python is a file containing Python code that can be reused in other Python programs."
    },
    {
      "question": "What is the purpose of the 'import' statement in Python?",
      "answer": "The 'import' statement in Python is used to import modules and their contents into the current namespace."
    },
    {
      "question": "What is the purpose of the 'from...import' statement in Python?",
      "answer": "The 'from...import' statement in Python is used to import specific objects (functions, classes, variables) from a module into the current namespace."
    },
    {
      "question": "What is the purpose of the 'assert' statement in Python?",
      "answer": "The 'assert' statement in Python is used to assert that a certain condition is true, and if not, it raises an AssertionError with an optional error message."
    },
    {
      "question": "What is the purpose of the 'yield' keyword in Python?",
      "answer": "The 'yield' keyword in Python is used inside generator functions to yield a value to the caller and temporarily suspend execution of the function."
    },
    {
      "question": "What is the purpose of the 'pass' statement in Python?",
      "answer": "The 'pass' statement in Python is used as a placeholder to indicate that no action is required."
    },
    {
      "question": "What is the purpose of the 'break' statement in Python?",
      "answer": "The 'break' statement in Python is used to exit the innermost loop (for or while) and transfer control to the statement immediately following the loop."
    },
    {
      "question": "What is the purpose of the 'continue' statement in Python?",
      "answer": "The 'continue' statement in Python is used to skip the rest of the code inside a loop for the current iteration and proceed to the next iteration."
    },
    {
      "question": "What is the purpose of the 'global' keyword in Python?",
      "answer": "The 'global' keyword in Python is used inside functions to indicate that a variable is global (outside the function's scope) and should be accessed and modified globally."
    },
    {
      "question": "What is the purpose of the 'non-local' keyword in Python?",
      "answer": "The 'non-local' keyword in Python is used inside nested functions to indicate that a variable belongs to the nearest enclosing scope (outer function) rather than the local scope."
    },
    {
      "question": "What is a virtual environment in Python?",
      "answer": "A virtual environment in Python is a self-contained directory that contains a Python interpreter and its standard library, as well as any additional packages installed specifically for that environment."
    },
    {
      "question": "What is pip?",
      "answer": "pip is the package installer for Python, used to install and manage Python packages from the Python Package Index (PyPI)."
    },
    {
      "question": "What is the purpose of the '__init__.py' file in a Python package?",
      "answer": "The '__init__.py' file in a Python package is used to indicate that the directory should be treated as a package, and it may also contain initialization code for the package."
    },
    {
      "question": "What is the purpose of the '__main__' module in Python?",
      "answer": "The '__main__' module in Python is the entry point for a Python program, and it is automatically executed when the script is run as the main program."
    },
    {
      "question": "What is the purpose of the '__name__' variable in Python?",
      "answer": "The '__name__' variable in Python is a special variable that holds the name of the current module, and it is set to '__main__' when the module is executed as the main program."
    },
    {
      "question": "What is the purpose of the 'sys.argv' variable in Python?",
      "answer": "The 'sys.argv' variable in Python is a list that contains the command-line arguments passed to a Python script, including the script name itself."
    },
    {
      "question": "What is a docstring in Python?",
      "answer": "A docstring in Python is a string literal used to document modules, classes, functions, or methods, and it is enclosed in triple quotes."
    },
    {
      "question": "What is the purpose of the 'dir()' function in Python?",
      "answer": "The 'dir()' function in Python is used to return a list of valid attributes for the specified object."
    },
    {
      "question": "What is the purpose of the 'help()' function in Python?",
      "answer": "The 'help()' function in Python is used to display documentation about modules, functions, classes, or methods."
    }
  ]
}